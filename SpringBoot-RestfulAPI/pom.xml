<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.base.demo</groupId>
		<artifactId>SpringBoot-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>SpringBoot-RestfulAPI</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SpringBoot-RestfulAPI</name>
	<description>Demo project for Spring Boot RestfulAPI</description>

	<properties>
        <!-- 只针对SpringBoot-RestfulAPI使用的引用包版本，其他的版本写在SpringBoot-parent上 -->
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.base.demo</groupId>
			<artifactId>SpringBoot-Service</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<!--spring boot 集成 web 模块-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- fastjson -->
		<!--<dependency>-->
			<!--<groupId>com.alibaba</groupId>-->
			<!--<artifactId>fastjson</artifactId>-->
			<!--<version>1.1.40</version>-->
		<!--</dependency>-->

		<!-- spring boot 集成devtools 热部署-->
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-devtools</artifactId>-->
			<!--<optional>true</optional>&lt;!&ndash; optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 &ndash;&gt;-->
		<!--</dependency>-->

		<!--spring boot 测试模块-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!--负责将应用程序打包成可执行的jar文件-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<finalName>SpringBoot-RestfulAPI</finalName>
					<archive>
						<!-- 添加index则不从mainfest中读取classpath，而是从Index.list中读取 -->
						<!--<index>true</index>-->
						<manifest>
							<!--执行文件(哪个class作为程序的入口来执行)-->
							<mainClass>com.base.demo.SpringBootRestfulApiApplication</mainClass>
							<!-- to create a class path to your dependecies you have to fill true
                                in this field -->
							<!--是否将依赖的classpath一起打包-->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/
                                如果自身jar包存放的位置和第三方jar包在同一级目录下，则classpath不需要前缀 -->
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>./</Class-Path>
						</manifestEntries>
					</archive>
					<!-- 过滤掉不希望包含在jar中的文件 -->
					<excludes>
						<exclude>package.xml</exclude>
						<exclude>application*</exclude>
						<exclude>config/</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!--负责将整个项目按照自定义的目录结构打成最终的压缩包-->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<!-- not append assembly id in release file name -->
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/resources/package.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
		</plugins>
	</build>


</project>
